#!/bin/python3
from PIL import Image, ImageOps

cursors = ({
        'name': 'arrow',
        'offset': (-1, -1),
        'clr': (
            0xFF, 0xFF, 0x80, 0x01, 0x80, 0x02, 0x80, 0x0C,
            0x80, 0x10, 0x80, 0x10, 0x80, 0x08, 0x80, 0x04,
            0x80, 0x02, 0x80, 0x01, 0x80, 0x02, 0x8C, 0x04,
            0x92, 0x08, 0x91, 0x10, 0xA0, 0xA0, 0xC0, 0x40,
            ),
        'set': (
            0x00, 0x00, 0x7f, 0xfe, 0x7f, 0xfc, 0x7f, 0xf0,
            0x7f, 0xe0, 0x7f, 0xe0, 0x7f, 0xf0, 0x7f, 0xf8,
            0x7f, 0xfc, 0x7f, 0xfe, 0x7f, 0xfc, 0x73, 0xf8,
            0x61, 0xf0, 0x60, 0xe0, 0x40, 0x40, 0x00, 0x00,
            )
    },{
        'name': 'cross',
        'offset': (-7, -7),
        'clr': (
            0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0,
            0x03, 0xC0, 0x03, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF,
            0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xC0, 0x03, 0xC0,
            0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0, 0x03, 0xC0,
            ),
        'set': (
            0x00, 0x00, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80,
            0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x7F, 0xFE,
            0x7F, 0xFE, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80,
            0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x00, 0x00,
            )
    },{
        'name': 'box',
        'offset': (-7, -7),
        'clr': (
            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
            0xFF, 0xFF, 0xF8, 0x1F, 0xF8, 0x1F, 0xF8, 0x1F,
            0xF8, 0x1F, 0xF8, 0x1F, 0xF8, 0x1F, 0xFF, 0xFF,
            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
            ),
        'set': (
            0x00, 0x00, 0x7F, 0xFE, 0x7F, 0xFE, 0x7F, 0xFE,
            0x70, 0x0E, 0x70, 0x0E, 0x70, 0x0E, 0x70, 0x0E,
            0x70, 0x0E, 0x70, 0x0E, 0x70, 0x0E, 0x70, 0x0E,
            0x7F, 0xFE, 0x7F, 0xFE, 0x7F, 0xFE, 0x00, 0x00,
            )
    },{
        'name': 'whitearrow',
        'offset': (-7, -7),
        'clr': (
            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFC,
            0xFF, 0xF0, 0xFF, 0xF0, 0xFF, 0xF8, 0xFF, 0xFC,
            0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFC,
            0xF3, 0xF8, 0xF1, 0xF0, 0xE0, 0xE0, 0xC0, 0x40,
            ),
        'set': (
            0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x06, 0xC0, 0x1C,
            0xC0, 0x30, 0xC0, 0x30, 0xC0, 0x38, 0xC0, 0x1C,
            0xC0, 0x0E, 0xC0, 0x07, 0xCE, 0x0E, 0xDF, 0x1C,
            0xD3, 0xB8, 0xF1, 0xF0, 0xE0, 0xE0, 0xC0, 0x40,
            )
    },{
        'name' :'sight',
        'offset': (-7, -7),
        'clr': (
            0x1F, 0xF8, 0x3F, 0xFC, 0x7F, 0xFE, 0xFB, 0xDF,
            0xF3, 0xCF, 0xE3, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF,
            0xFF, 0xFF, 0xFF, 0xFF, 0xE3, 0xC7, 0xF3, 0xCF,
            0x7B, 0xDF, 0x7F, 0xFE, 0x3F, 0xFC, 0x1F, 0xF8,
            ),
        'set': (
            0x00, 0x00, 0x0F, 0xF0, 0x31, 0x8C, 0x21, 0x84,
            0x41, 0x82, 0x41, 0x82, 0x41, 0x82, 0x7F, 0xFE,
            0x7F, 0xFE, 0x41, 0x82, 0x41, 0x82, 0x41, 0x82,
            0x21, 0x84, 0x31, 0x8C, 0x0F, 0xF0, 0x00, 0x00,
            )
    },{
        'name': 'query',
        'offset': (-7, -7),
        'clr': (
            0x0f, 0xf0, 0x1f, 0xf8, 0x3f, 0xfc, 0x7f, 0xfe,
            0x7c, 0x7e, 0x78, 0x7e, 0x00, 0xfc, 0x01, 0xf8,
            0x03, 0xf0, 0x07, 0xe0, 0x07, 0xc0, 0x07, 0xc0,
            0x07, 0xc0, 0x07, 0xc0, 0x07, 0xc0, 0x07, 0xc0,
            ),
        'set': (
            0x00, 0x00, 0x0f, 0xf0, 0x1f, 0xf8, 0x3c, 0x3c,
            0x38, 0x1c, 0x00, 0x3c, 0x00, 0x78, 0x00, 0xf0,
            0x01, 0xe0, 0x03, 0xc0, 0x03, 0x80, 0x03, 0x80,
            0x00, 0x00, 0x03, 0x80, 0x03, 0x80, 0x00, 0x00,
            )
    },{
        'name' :'tl',
        'offset': (-4, -4),
        'clr': (
            0xfe, 0x00, 0x82, 0x00, 0x8c, 0x00, 0x87, 0xff,
            0xa0, 0x01, 0xb0, 0x01, 0xd0, 0x01, 0x11, 0xff,
            0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00,
            0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x1f, 0x00,
            ),
        'set': (
            0x00, 0x00, 0x7c, 0x00, 0x70, 0x00, 0x78, 0x00,
            0x5f, 0xfe, 0x4f, 0xfe, 0x0f, 0xfe, 0x0e, 0x00,
            0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00,
            0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x00, 0x00,
            )
    },{
        'name' :'t',
        'offset': (-7, -8),
        'clr': (
            0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x06, 0xc0,
            0x1c, 0x70, 0x10, 0x10, 0x0c, 0x60, 0xfc, 0x7f,
            0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0xff, 0xff,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            ),
        'set': (
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
            0x03, 0x80, 0x0f, 0xe0, 0x03, 0x80, 0x03, 0x80,
            0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            )
    },{
        'name' :'tr',
        'offset': (-11, -4),
        'clr': (
            0x00, 0x7f, 0x00, 0x41, 0x00, 0x31, 0xff, 0xe1,
            0x80, 0x05, 0x80, 0x0d, 0x80, 0x0b, 0xff, 0x88,
            0x00, 0x88, 0x00, 0x88, 0x00, 0x88, 0x00, 0x88,
            0x00, 0x88, 0x00, 0x88, 0x00, 0x88, 0x00, 0xf8,
            ),
        'set': (
            0x00, 0x00, 0x00, 0x3e, 0x00, 0x0e, 0x00, 0x1e,
            0x7f, 0xfa, 0x7f, 0xf2, 0x7f, 0xf0, 0x00, 0x70,
            0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70,
            0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00,
            )
    },{
        'name' :'r',
        'offset': (-8, -7),
        'clr': (
            0x07, 0xc0, 0x04, 0x40, 0x04, 0x40, 0x04, 0x58,
            0x04, 0x68, 0x04, 0x6c, 0x04, 0x06, 0x04, 0x02,
            0x04, 0x06, 0x04, 0x6c, 0x04, 0x68, 0x04, 0x58,
            0x04, 0x40, 0x04, 0x40, 0x04, 0x40, 0x07, 0xc0,
            ),
        'set': (
            0x00, 0x00, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80,
            0x03, 0x90, 0x03, 0x90, 0x03, 0xf8, 0x03, 0xfc,
            0x03, 0xf8, 0x03, 0x90, 0x03, 0x90, 0x03, 0x80,
            0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x00, 0x00,
            )
    },{
        'name' :'br',
        'offset': (-11, -11),
        'clr': (
            0x00, 0xf8, 0x00, 0x88, 0x00, 0x88, 0x00, 0x88,
            0x00, 0x88, 0x00, 0x88, 0x00, 0x88, 0x00, 0x88,
            0xff, 0x88, 0x80, 0x0b, 0x80, 0x0d, 0x80, 0x05,
            0xff, 0xe1, 0x00, 0x31, 0x00, 0x41, 0x00, 0x7f,
            ),
        'set': (
            0x00, 0x00, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70,
            0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x70,
            0x00, 0x70, 0x7f, 0xf0, 0x7f, 0xf2, 0x7f, 0xfa,
            0x00, 0x1e, 0x00, 0x0e, 0x00, 0x3e, 0x00, 0x00,
            )
    },{
        'name' :'b',
        'offset': (-7, -7),
        'clr': (
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xff, 0xff, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01,
            0xfc, 0x7f, 0x0c, 0x60, 0x10, 0x10, 0x1c, 0x70,
            0x06, 0xc0, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
            ),
        'set': (
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe,
            0x03, 0x80, 0x03, 0x80, 0x0f, 0xe0, 0x03, 0x80,
            0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            )
    },{
        'name' :'bl',
        'offset': (-4, -11),
        'clr': (
            0x1f, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00,
            0x11, 0x00, 0x11, 0x00, 0x11, 0x00, 0x11, 0x00,
            0x11, 0xff, 0xd0, 0x01, 0xb0, 0x01, 0xa0, 0x01,
            0x87, 0xff, 0x8c, 0x00, 0x82, 0x00, 0xfe, 0x00,
            ),
        'set': (
            0x00, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00,
            0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x0e, 0x00,
            0x0e, 0x00, 0x0f, 0xfe, 0x4f, 0xfe, 0x5f, 0xfe,
            0x78, 0x00, 0x70, 0x00, 0x7c, 0x00, 0x00, 0x00,
            )
    },{
        'name' :'l',
        'offset': (-7, -7),
        'clr': (
            0x03, 0xe0, 0x02, 0x20, 0x02, 0x20, 0x1a, 0x20,
            0x16, 0x20, 0x36, 0x20, 0x60, 0x20, 0x40, 0x20,
            0x60, 0x20, 0x36, 0x20, 0x16, 0x20, 0x1a, 0x20,
            0x02, 0x20, 0x02, 0x20, 0x02, 0x20, 0x03, 0xe0,
            ),
        'set': (
            0x00, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0,
            0x09, 0xc0, 0x09, 0xc0, 0x1f, 0xc0, 0x3f, 0xc0,
            0x1f, 0xc0, 0x09, 0xc0, 0x09, 0xc0, 0x01, 0xc0,
            0x01, 0xc0, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x00,
            )
    },{
        'name' :'dot',
        'offset': (-7, -7),
        'clr': (
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x03, 0xc0, 0x07, 0xe0, 0x0f, 0xf0, 0x0f, 0xf0,
            0x0f, 0xf0, 0x07, 0xe0, 0x03, 0xc0, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            ),
        'set': (
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x03, 0xc0, 0x07, 0xe0, 0x07, 0xe0,
            0x07, 0xe0, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            )
    },{
        'name' :'deadmouse',
        'offset': (-7, -7),
        'clr': (
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x0C, 0x00, 0x8E, 0x1D, 0xC7,
            0xFF, 0xE3, 0xFF, 0xF3, 0xFF, 0xFF, 0x7F, 0xFE,
            0x3F, 0xF8, 0x17, 0xF0, 0x03, 0xE0, 0x00, 0x00,
            ),
        'set': (
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x08, 0x00, 0x04, 0x00, 0x82,
            0x04, 0x41, 0xFF, 0xE1, 0x5F, 0xF1, 0x3F, 0xFE,
            0x17, 0xF0, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00,
            )
    },{
        'name' :'lockarrow',
        'offset': (-7, -7),
        'clr': (
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            ),
        'set': (
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x0F, 0xC0, 0x0F, 0xC0,
            0x03, 0xC0, 0x07, 0xC0, 0x0E, 0xC0, 0x1C, 0xC0,
            0x38, 0x00, 0x70, 0x00, 0xE0, 0xDB, 0xC0, 0xDB,
            )
    },{
        'name' :'reading',
        'offset': (-1, -1),
        'clr': (
            0xff, 0x80, 0xff, 0x80, 0xff, 0x00, 0xfe, 0x00,
            0xff, 0x00, 0xff, 0x80, 0xff, 0xc0, 0xef, 0xe0,
            0xc7, 0xf0, 0x03, 0xf0, 0x01, 0xe0, 0x00, 0xc0,
            0x03, 0xff, 0x03, 0xff, 0x03, 0xff, 0x03, 0xff,
            ),
        'set': (
            0x00, 0x00, 0x7f, 0x00, 0x7e, 0x00, 0x7c, 0x00,
            0x7e, 0x00, 0x7f, 0x00, 0x6f, 0x80, 0x47, 0xc0,
            0x03, 0xe0, 0x01, 0xf0, 0x00, 0xe0, 0x00, 0x40,
            0x00, 0x00, 0x01, 0xb6, 0x01, 0xb6, 0x00, 0x00,
            )
    },{
        'name' :'sweep',
        'offset': (-7, -7),
        'clr': (
            0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x07,
            0xE0, 0x07, 0xE0, 0x07, 0xE3, 0xF7, 0xE3, 0xF7,
            0xE3, 0xE7, 0xE3, 0xF7, 0xE3, 0xFF, 0xE3, 0x7F,
            0xE0, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
            ),
        'set': (
            0x00, 0x00, 0x7F, 0xFE, 0x40, 0x02, 0x40, 0x02,
            0x40, 0x02, 0x40, 0x02, 0x40, 0x02, 0x41, 0xE2,
            0x41, 0xC2, 0x41, 0xE2, 0x41, 0x72, 0x40, 0x38,
            0x40, 0x1C, 0x40, 0x0E, 0x7F, 0xE6, 0x00, 0x00,
            )
    }
)

for cursor in cursors:
    src = cursor['set']
    mask = []
    for i in range(0, 2*16):
        mask.append(cursor['set'][i] | cursor['clr'][i])

    xsrc = Image.frombytes('1', (16, 16), bytes(src), decoder_name='raw')
    xsrc = xsrc.convert('L')
    xsrc = ImageOps.invert(xsrc)

    xmask = Image.frombytes('1', (16, 16), bytes(mask), decoder_name='raw')

    img = Image.new('RGBA', (16, 16), color=(255,255,255,0))
    img.paste(xsrc, mask=xmask)
    png = '{}.png'.format(cursor['name'])
    img.save(png, 'PNG')
    xgen = open('{}.in'.format(cursor['name']), 'w')
    xgen.truncate()
    xgen.write('16 {} {} {}\n'.format(
        -cursor['offset'][0], -cursor['offset'][1], png))
    xgen.close()
